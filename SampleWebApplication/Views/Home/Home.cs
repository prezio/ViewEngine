/*  ===========================================================
     
    This code is auto generated
    This is definition of class for rendering "Home"
    Code was generated by ViewEngine
    
    ===========================================================
*/
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ViewEngine.Core.Engine;
using System.Web.Mvc;
// Additional Namespaces
using pompka;

// =====================
namespace projekcik
{
    // HomeView - generated class which
    // should be used for rendering views
    [ViewRenderer(@"E:\kodzenie\mgr\final\ViewEngine.Core\ViewEngine\SampleWebApplication\Views\Home\Home.myview")]
    class HomeView : IView
    {
        // SECTION WITH MIXIN DECLARATIONS ======
        public static void Html(TextWriter writer, IReadOnlyDictionary<string, Action> environment)
        {
            writer.Write("pompka");
            writer.Write("\r\n");
        }

        public static void H1(TextWriter writer, IReadOnlyDictionary<string, Action> environment)
        {
            writer.Write("<h1> ");
            RenderHelpers.InvokeVariable(environment, "header");
            writer.Write(" </h1>");
            writer.Write("\r\n");
        }

        public static void Line(TextWriter writer, IReadOnlyDictionary<string, Action> environment)
        {
            RenderHelpers.InvokeVariable(environment, "line");
            writer.Write(" </br>");
            writer.Write("\r\n");
        }

        // END OF SECTION WITH MIXIN DECLARATIONS
        // ======================================
        // Render Method
        public void Render(ViewContext viewContext, TextWriter writer)
        {
            Html(writer, new Dictionary<string, Action>()
            {{"body", () =>
            {
                H1(writer, new Dictionary<string, Action>()
                {{"header", () =>
                {
                    writer.Write("Example site generated with ViewEngine");
                }
                }, });
                writer.Write("My name is: ");
                writer.Write($"{Model.Name}");
                writer.Write("\r\n");
                Line(writer, new Dictionary<string, Action>()
                {});
                for (int i = 0; i < 10; i++)
                {
                    Line(writer, new Dictionary<string, Action>()
                    {{"line", () =>
                    {
                        writer.Write("Row no. ");
                        writer.Write($"{i}");
                        writer.Write("\r\n");
                    }
                    }, });
                }

                Line(writer, new Dictionary<string, Action>()
                {{"line", () =>
                {
                    writer.Write("End line");
                }
                }, });
            }
            }, {"srompka", () =>
            {
                writer.Write("fekeok");
            }
            }, {"pompka", () =>
            {
                writer.Write($"{model.jojo}");
            }
            }, {"title", () =>
            {
                writer.Write("Example Title");
            }
            }, });
        }
    }
}